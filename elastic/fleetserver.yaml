apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: eck-stack
    app.kubernetes.io/name: fleet-server
    app.kubernetes.io/version: 8.17.0
  name: fleet-server
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fleet-server
  namespace: monitoring
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
    - replicasets
  verbs:
    - get
    - watch
    - list
- apiGroups:
  - batch
  resources:
    - jobs
  verbs:
    - get
    - watch
    - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fleet-server
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: fleet-server
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: fleet-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
  namespace: monitoring
spec:
  version: 8.17.0
  image: registry.local.dev:5001/docker.elastic.co/beats/elastic-agent:8.17.0
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  kibanaRef:
    name: kibana
  elasticsearchRefs:
  - name: elasticsearch
  mode: fleet
  fleetServerEnabled: true
  policyID: eck-fleet-server
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: fleet-server
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
