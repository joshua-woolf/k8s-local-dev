alertmanager:
  enabled: false

grafana:
  grafana.ini:
    analytics:
      check_for_updates: false
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: ca-issuer
      external-dns.alpha.kubernetes.io/target: local.dev
    enabled: true
    hosts:
      - grafana.local.dev
    ingressClassName: traefik
    tls:
      - hosts:
          - grafana.local.dev
        secretName: grafana-tls
  nodeSelector:
    kubernetes.io/os: linux
  persistence:
    enabled: true
    size: 5Gi
  sidecar:
    alertmanager:
      enabled: false
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      searchNamespace: ALL
      provider:
        allowUiUpdates: true
        foldersFromFilesStructure: true
  testFramework:
    enabled: false

kube-state-metrics:
  nodeSelector:
    kubernetes.io/os: linux

kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

nodeExporter:
  operatingSystems:
    aix:
      enabled: false
    darwin:
      enabled: false

prometheus:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: ca-issuer
      external-dns.alpha.kubernetes.io/target: local.dev
    enabled: true
    hosts:
      - prometheus.local.dev
    ingressClassName: traefik
    tls:
      - hosts:
          - prometheus.local.dev
        secretName: prometheus-tls
  nodeSelector:
    kubernetes.io/os: linux
  prometheusSpec:
    additionalScrapeConfigs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
  storageSpec:
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi

prometheus-node-exporter:
  nodeSelector:
    kubernetes.io/os: linux

prometheusOperator:
  nodeSelector:
    kubernetes.io/os: linux
